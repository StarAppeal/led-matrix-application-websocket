name: Build Pillow and Docker Image

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-pillow:
    runs-on: ubuntu-latest

    outputs:
      wheels-path: ${{ steps.upload-wheels.outputs.artifact-path }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libjpeg-dev zlib1g-dev

      - name: Install pip tools
        run: pip install pip wheel setuptools

      - name: Build Pillow wheel for ARMv6
        run: |
          mkdir -p wheels
          pip wheel --no-binary :all: --wheel-dir wheels pillow==10.3.0

      - name: Upload Pillow wheel
        uses: actions/upload-artifact@v4
        with:
          name: pillow-wheel
          path: wheels/

  build-and-push:
    runs-on: ubuntu-latest
    needs: build-pillow   # <- wartet auf Pillow

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Pillow wheel
        uses: actions/download-artifact@v4
        with:
          name: pillow-wheel
          path: wheels

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Poetry
        run: pip install poetry-plugin-export

      - name: Export requirements.txt
        run: |
           cd src/
           poetry export -f requirements.txt --output requirements.txt --without-hashes

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          VERSION="${{ github.ref_name }}"
          IMAGE_NAME="led-matrix-application-websocket"
          REPOSITORY_OWNER_LOWERCASE=$(echo "${{ github.actor }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_TAG_LATEST="latest"
          IMAGE_TAG_VERSION="${VERSION}"
          
          echo "ðŸš€ Building the image with tags: ${IMAGE_TAG_LATEST} and ${IMAGE_TAG_VERSION}"
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm/v6,linux/arm/v7 \
            -t ghcr.io/${REPOSITORY_OWNER_LOWERCASE}/${IMAGE_NAME}:${IMAGE_TAG_LATEST} \
            -t ghcr.io/${REPOSITORY_OWNER_LOWERCASE}/${IMAGE_NAME}:${IMAGE_TAG_VERSION} \
            --build-arg PILLOW_WHEEL=./wheels/Pillow-*.whl \
            --push .

      - name: Clean up
        run: rm -f src/requirements.txt
